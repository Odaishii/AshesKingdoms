plugins {
	id 'fabric-loom' version '1.11-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url "https://maven.fabricmc.net/" }
	mavenCentral()
	maven { url "https://maven.terraformersmc.com/releases" }
}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

dependencies {
	// Minecraft + mappings + loader + Fabric API
	minecraft "com.mojang:minecraft:1.21.1"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Numismatic Overhaul (local JAR)
	modImplementation files("libs/numismatic-overhaul-0.3.4+1.21.jar")

	// Kotlin required by NO
	modImplementation "net.fabricmc:fabric-language-kotlin:1.12.2+kotlin.2.0.20"
}

processResources {
	inputs.property "version", project.version
	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName
	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}" }
	}
}

publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}
}
